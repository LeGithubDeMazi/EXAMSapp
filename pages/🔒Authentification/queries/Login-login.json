{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "login",
    "fullyQualifiedName": "Login.login",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "ðŸ”’Authentification",
    "collectionId": "ðŸ”’Authentification_Login",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  let a = await LogIn.run();\n  delete a.user;\n  let b = await Object.keys(a).forEach(i => {\n    storeValue(i, a[i]);\n  });\n  let c = await GetUser.run();\n  let c1 = await GetPublicUser.run();\n  let d = await GetPublicUser.data;\n  if (d[0].role == 'parent') {\n    storeValue('ideleve', d[0].enfant);\n    let e = await navigateTo('pageEleve');\n  }\n  ;\n  if (d[0].role == 'eleve') {\n    storeValue('ideleve', d[0].id);\n    let e = await navigateTo('pageEleve');\n  }\n  ;\n  if (d[0].role == 'prof') {\n    let e = await navigateTo('pageProf1');\n  }\n}",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  let a = await LogIn.run();\n  delete a.user;\n  let b = await Object.keys(a).forEach(i => {\n    storeValue(i, a[i]);\n  });\n  let c = await GetUser.run();\n  let c1 = await GetPublicUser.run();\n  let d = await GetPublicUser.data;\n  if (d[0].role == 'parent') {\n    storeValue('ideleve', d[0].enfant);\n    let e = await navigateTo('pageEleve');\n  }\n  ;\n  if (d[0].role == 'eleve') {\n    storeValue('ideleve', d[0].id);\n    let e = await navigateTo('pageEleve');\n  }\n  ;\n  if (d[0].role == 'prof') {\n    let e = await navigateTo('pageProf1');\n  }\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "ðŸ”’Authentification_Login.login",
  "deleted": false,
  "gitSyncId": "6309d2731d42e903aff988f3_630e255da159817a11648de5"
}